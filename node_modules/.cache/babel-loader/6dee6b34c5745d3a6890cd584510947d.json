{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andr\\xE9 Jord\\xE3o\\\\Desktop\\\\My Apps\\\\react-app-categories\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { createPaginationNumbers, setPaginationNumberActive } from '../helpers'; //Custom hook for using pagination numbers\n\nexport const usePaginationNumbers = (numPages, activePage) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        paginationNumbers = _useState2[0],\n        setPaginationNumbers = _useState2[1];\n\n  useEffect(() => {\n    setPaginationNumbers(setPaginationNumberActive(createPaginationNumbers(numPages), activePage > numPages ? numPages : activePage));\n  }, [numPages, activePage]);\n  return [paginationNumbers, setPaginationNumbers];\n};","map":{"version":3,"sources":["C:/Users/André Jordão/Desktop/My Apps/react-app-categories/src/components/Pagination/hooks/usePaginationNumbers.js"],"names":["useState","useEffect","createPaginationNumbers","setPaginationNumberActive","usePaginationNumbers","numPages","activePage","paginationNumbers","setPaginationNumbers"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,uBAAT,EAAkCC,yBAAlC,QAAmE,YAAnE,C,CAEA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAAA,oBACVN,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,QACrDO,iBADqD;AAAA,QAClCC,oBADkC;;AAE5DP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,oBAAoB,CAClBL,yBAAyB,CACvBD,uBAAuB,CAACG,QAAD,CADA,EAEvBC,UAAU,GAAGD,QAAb,GAAwBA,QAAxB,GAAmCC,UAFZ,CADP,CAApB;AAMD,GAPQ,EAON,CAACD,QAAD,EAAWC,UAAX,CAPM,CAAT;AASA,SAAO,CAACC,iBAAD,EAAoBC,oBAApB,CAAP;AACD,CAZM","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { createPaginationNumbers, setPaginationNumberActive } from '../helpers';\r\n\r\n//Custom hook for using pagination numbers\r\nexport const usePaginationNumbers = (numPages, activePage) => {\r\n  const [paginationNumbers, setPaginationNumbers] = useState([]);\r\n  useEffect(() => {\r\n    setPaginationNumbers(\r\n      setPaginationNumberActive(\r\n        createPaginationNumbers(numPages),\r\n        activePage > numPages ? numPages : activePage\r\n      )\r\n    );\r\n  }, [numPages, activePage]);\r\n\r\n  return [paginationNumbers, setPaginationNumbers];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}