{"ast":null,"code":"const returnObj = i => {\n  return {\n    text: i,\n    active: false\n  };\n};\n\nexport const createPaginationNumbers = howMany => {\n  let paginationNumbers = [];\n\n  for (let i = 1; i <= howMany; i++) {\n    paginationNumbers.push(returnObj(i));\n  }\n\n  return paginationNumbers;\n};\nexport const setOneActive = (paginationNumbers, activePage) => {\n  if (!activePage) return [...paginationNumbers];\n  return paginationNumbers.map(p => p.text === activePage ? {\n    text: p.text,\n    active: true\n  } : {\n    text: p.text,\n    active: false\n  });\n};\nexport const getActivePaginationNumber = paginationNumbers => {\n  return paginationNumbers.find(p => p.active);\n};\n\nconst x = () => {\n  text;\n};","map":{"version":3,"sources":["C:/Users/André Jordão/Desktop/talkdesk/src/components/Pagination/helpers/index.js"],"names":["returnObj","i","text","active","createPaginationNumbers","howMany","paginationNumbers","push","setOneActive","activePage","map","p","getActivePaginationNumber","find","x"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,CAAC,IAAI;AACrB,SAAO;AAAEC,IAAAA,IAAI,EAAED,CAAR;AAAWE,IAAAA,MAAM,EAAE;AAAnB,GAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,uBAAuB,GAAGC,OAAO,IAAI;AAChD,MAAIC,iBAAiB,GAAG,EAAxB;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAII,OAArB,EAA8BJ,CAAC,EAA/B,EAAmC;AACjCK,IAAAA,iBAAiB,CAACC,IAAlB,CAAuBP,SAAS,CAACC,CAAD,CAAhC;AACD;;AACD,SAAOK,iBAAP;AACD,CANM;AAQP,OAAO,MAAME,YAAY,GAAG,CAACF,iBAAD,EAAoBG,UAApB,KAAmC;AAC7D,MAAI,CAACA,UAAL,EAAiB,OAAO,CAAC,GAAGH,iBAAJ,CAAP;AACjB,SAAOA,iBAAiB,CAACI,GAAlB,CAAsBC,CAAC,IAC5BA,CAAC,CAACT,IAAF,KAAWO,UAAX,GACI;AAAEP,IAAAA,IAAI,EAAES,CAAC,CAACT,IAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GADJ,GAEI;AAAED,IAAAA,IAAI,EAAES,CAAC,CAACT,IAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAHC,CAAP;AAKD,CAPM;AASP,OAAO,MAAMS,yBAAyB,GAAGN,iBAAiB,IAAI;AAC5D,SAAOA,iBAAiB,CAACO,IAAlB,CAAuBF,CAAC,IAAIA,CAAC,CAACR,MAA9B,CAAP;AACD,CAFM;;AAKP,MAAMW,CAAC,GAAG,MAAK;AAACZ,EAAAA,IAAI;AAAC,CAArB","sourcesContent":["const returnObj = i => {\r\n  return { text: i, active: false };\r\n};\r\n\r\nexport const createPaginationNumbers = howMany => {\r\n  let paginationNumbers = [];\r\n  for (let i = 1; i <= howMany; i++) {\r\n    paginationNumbers.push(returnObj(i));\r\n  }\r\n  return paginationNumbers;\r\n};\r\n\r\nexport const setOneActive = (paginationNumbers, activePage) => {\r\n  if (!activePage) return [...paginationNumbers];\r\n  return paginationNumbers.map(p =>\r\n    p.text === activePage\r\n      ? { text: p.text, active: true }\r\n      : { text: p.text, active: false }\r\n  );\r\n};\r\n\r\nexport const getActivePaginationNumber = paginationNumbers => {\r\n  return paginationNumbers.find(p => p.active);\r\n};\r\n\r\n\r\nconst x = ()=> {text}\r\n\r\n"]},"metadata":{},"sourceType":"module"}