{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Andr\\xE9 Jord\\xE3o\\\\Desktop\\\\talkdesk\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Andr\\xE9 Jord\\xE3o\\\\Desktop\\\\talkdesk\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andr\\xE9 Jord\\xE3o\\\\Desktop\\\\talkdesk\\\\src\\\\components\\\\Pagination\\\\Pagination.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './Pagination.module.css';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst returnObj = (e, i) => {\n  return {\n    text: ++i,\n    active: false\n  };\n};\n\nconst createPaginationNumbers = howMany => {\n  let paginationNumbers = [];\n  paginationNumbers.length = howMany;\n  return paginationNumbers.map(returnObj);\n};\n\nconst setActive = (paginationNumbers, activePage) => {\n  return paginationNumbers.map(p => p.text === activePage ? {\n    text: activePage,\n    active: true\n  } : p);\n};\n\nconst Pagination = ({\n  numberOfPages,\n  activePage\n}) => {\n  //const [currentPage, setCurrentPage] = useState(1);\n  const _useState = useState(createPaginationNumbers(numberOfPages || 10)),\n        _useState2 = _slicedToArray(_useState, 2),\n        paginationNumbers = _useState2[0],\n        setPaginationNumbers = _useState2[1];\n  /*const maxPages = Math.ceil(totalItems / itemsPerPage);\r\n  for (let index = 1; index <= maxPages; index++) {\r\n    pageNumbers.push(index);\r\n  }*/\n\n\n  const handleClick = number => {\n    const updatedNumber = _objectSpread({}, number, {\n      active: true\n    });\n\n    setPaginationNumbers([...paginationNumbers.filter(p => p.text !== updatedNumber.text), updatedNumber]);\n    console.log(paginationNumbers);\n  };\n\n  return React.createElement(\"ul\", {\n    className: styles.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"!#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"<\")), paginationNumbers.map(number => React.createElement(\"li\", {\n    className: number.active && styles.active,\n    key: number.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"!#\",\n    onClick: () => handleClick(number),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, number.text))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"!#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \">\")));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/André Jordão/Desktop/talkdesk/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","styles","Link","useRouteMatch","returnObj","e","i","text","active","createPaginationNumbers","howMany","paginationNumbers","length","map","setActive","activePage","p","Pagination","numberOfPages","setPaginationNumbers","handleClick","number","updatedNumber","filter","console","log","pagination"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;;AAEA,MAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAE,EAAED,CAAV;AAAaE,IAAAA,MAAM,EAAE;AAArB,GAAP;AACD,CAFD;;AAIA,MAAMC,uBAAuB,GAAGC,OAAO,IAAI;AACzC,MAAIC,iBAAiB,GAAG,EAAxB;AACAA,EAAAA,iBAAiB,CAACC,MAAlB,GAA2BF,OAA3B;AACA,SAAOC,iBAAiB,CAACE,GAAlB,CAAsBT,SAAtB,CAAP;AACD,CAJD;;AAMA,MAAMU,SAAS,GAAG,CAACH,iBAAD,EAAoBI,UAApB,KAAmC;AACnD,SAAOJ,iBAAiB,CAACE,GAAlB,CAAsBG,CAAC,IAC5BA,CAAC,CAACT,IAAF,KAAWQ,UAAX,GAAwB;AAAER,IAAAA,IAAI,EAAEQ,UAAR;AAAoBP,IAAAA,MAAM,EAAE;AAA5B,GAAxB,GAA6DQ,CADxD,CAAP;AAGD,CAJD;;AAMA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBH,EAAAA;AAAjB,CAAD,KAAmC;AACpD;AADoD,oBAEFhB,QAAQ,CACxDU,uBAAuB,CAACS,aAAa,IAAI,EAAlB,CADiC,CAFN;AAAA;AAAA,QAE7CP,iBAF6C;AAAA,QAE1BQ,oBAF0B;AAKpD;;;;;;AAKA,QAAMC,WAAW,GAAGC,MAAM,IAAI;AAC5B,UAAMC,aAAa,qBAAQD,MAAR;AAAgBb,MAAAA,MAAM,EAAE;AAAxB,MAAnB;;AACAW,IAAAA,oBAAoB,CAAC,CACnB,GAAGR,iBAAiB,CAACY,MAAlB,CAAyBP,CAAC,IAAIA,CAAC,CAACT,IAAF,KAAWe,aAAa,CAACf,IAAvD,CADgB,EAEnBe,aAFmB,CAAD,CAApB;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,iBAAZ;AACD,GARD;;AAUA,SACE;AAAI,IAAA,SAAS,EAAEV,MAAM,CAACyB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,EAIGf,iBAAiB,CAACE,GAAlB,CAAsBQ,MAAM,IAC3B;AAAI,IAAA,SAAS,EAAEA,MAAM,CAACb,MAAP,IAAiBP,MAAM,CAACO,MAAvC;AAA+C,IAAA,GAAG,EAAEa,MAAM,CAACd,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,IAAR;AAAa,IAAA,OAAO,EAAE,MAAMa,WAAW,CAACC,MAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACd,IADV,CADF,CADD,CAJH,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAZF,CADF;AAkBD,CAtCD;;AAwCA,eAAeU,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './Pagination.module.css';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nconst returnObj = (e, i) => {\r\n  return { text: ++i, active: false };\r\n};\r\n\r\nconst createPaginationNumbers = howMany => {\r\n  let paginationNumbers = [];\r\n  paginationNumbers.length = howMany;\r\n  return paginationNumbers.map(returnObj);\r\n};\r\n\r\nconst setActive = (paginationNumbers, activePage) => {\r\n  return paginationNumbers.map(p =>\r\n    p.text === activePage ? { text: activePage, active: true } : p\r\n  );\r\n};\r\n\r\nconst Pagination = ({ numberOfPages, activePage }) => {\r\n  //const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationNumbers, setPaginationNumbers] = useState(\r\n    createPaginationNumbers(numberOfPages || 10)\r\n  );\r\n  /*const maxPages = Math.ceil(totalItems / itemsPerPage);\r\n  for (let index = 1; index <= maxPages; index++) {\r\n    pageNumbers.push(index);\r\n  }*/\r\n\r\n  const handleClick = number => {\r\n    const updatedNumber = { ...number, active: true };\r\n    setPaginationNumbers([\r\n      ...paginationNumbers.filter(p => p.text !== updatedNumber.text),\r\n      updatedNumber\r\n    ]);\r\n\r\n    console.log(paginationNumbers);\r\n  };\r\n\r\n  return (\r\n    <ul className={styles.pagination}>\r\n      <li>\r\n        <a href='!#'>&lt;</a>\r\n      </li>\r\n      {paginationNumbers.map(number => (\r\n        <li className={number.active && styles.active} key={number.text}>\r\n          <a href='!#' onClick={() => handleClick(number)}>\r\n            {number.text}\r\n          </a>\r\n        </li>\r\n      ))}\r\n\r\n      <li>\r\n        <a href='!#'>&gt;</a>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}